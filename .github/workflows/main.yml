name: hooks
on: [push]
jobs:
  cli:
    if: "contains(github.event.head_commit.message, 'deploy-cli')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: denolib/setup-deno@v2
      - run: deno compile --output compiled-cli --allow-write --allow-run --allow-read --allow-net --allow-sys --allow-env cli/src/index.ts
      - id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./compiled-cli
          asset_name: cli
          asset_content_type: application/octet-stream

  pypi:
    if: "contains(github.event.head_commit.message, 'deploy-pypi')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install build
        run: pip install build
      - name: build
        run: python -m build python
      - name: deploy
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: python/dist/
  npm:
    if: "contains(github.event.head_commit.message, 'deploy-npm')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Deno Version
        uses: denolib/setup-deno@v2
      - run: deno task build
      - uses: actions/setup-node@v3
        with:
          registry-url: "https://registry.npmjs.org"
      - run: npm publish
        working-directory: dist
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
